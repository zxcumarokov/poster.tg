from _typeshed import Incomplete

class CallbackDataFilter:
    config: Incomplete
    factory: Incomplete
    def __init__(self, factory, config: dict[str, str]) -> None: ...
    def check(self, query) -> bool: ...

class CallbackData:
    prefix: Incomplete
    sep: Incomplete
    def __init__(self, *parts, prefix: str, sep: str = ':') -> None: ...
    def new(self, *args, **kwargs) -> str: ...
    def parse(self, callback_data: str) -> dict[str, str]: ...
    def filter(self, **config) -> CallbackDataFilter: ...
